name: Publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install poetry
        uses: snok/install-poetry@v1
      - name: Poetry build
        run: poetry build
      - uses: actions/upload-artifact@v3
        with:
          path: dist/

  publish:
    name: Publish to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/module-level-lint
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist/
      - name: Publish distribution
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true

  release:
    name: Create GitHub Release Package
    needs:
      - publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all dists
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist/
      - name: Sign dists
        uses: sigstore/gh-action-sigstore-python@v2.1.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
